import pygame
import time
import socket
import Queue
import re
import threading

c_queue= Queue.Queue(2)

def print_value (screen, text, _font, font_size, color, _x, _y):
    my_font_value = pygame.font.SysFont(_font, font_size)
    screen.blit( my_font_value.render(text,1,color)     ,( _x, _y))
    
def joy_AND_connection( threadName, delay):
    count =0
    while count <30:
        time.sleep(delay)
        count += 1
        print "%s: %s"%( threadName, time.ctime(time.time()))
def extractIP( ipStr):
     
    l = re.split('(.*)\.(.*)\.(.*)\.(.*)', ipStr)
    print str(l[1]+"."+l[2]+"."+l[3]+".")
    return str(l[1]+"."+l[2]+"."+l[3]+".")

def find_server (start, stop, host, port ):
    full_host = ""
    c_socket =  socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    #print "zasieg: " + str(start) + " " + str(stop)
    for x in range(start,stop):
        full_host = host + str(x)
        if c_queue.empty() == False:
            break
        #print full_host
        try:
            c_socket.connect((full_host,port))
        except socket.error, msg : 
            #print full_host+" " + str( msg[0]) +" "+ unicode(msg[1], "windows-1250")
            continue
        else:
            c_queue.put(full_host)
            print "OK - HOST: "+full_host
            return "OK - HOST: "+full_host
    #print "KONIEC!!: " + str(start) + " " + str(stop)
    return "NOT FOUND" 

def find_ip_start (port):
    adres = extractIP(str(socket.gethostbyname(socket.gethostname())))   
    c_thread = [0]   
    c_thread[0] = threading.Thread(target = find_server , args = (251,255,adres, port ))
    c_thread[0].start() 
    for num in range(1, 26):
        c_thread.extend("0")
        c_thread[num] = threading.Thread(target = find_server , args = ((num-1)*10+1,num*10,adres, port ))
        c_thread[num].start()
        